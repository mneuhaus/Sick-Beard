#import sickbeard
#from sickbeard.common import *
        <div class="field-pair">
            <label for="statusSelect" class="nocheck clearfix">
                <span class="component-title">
                    <select name="defaultStatus" id="statusSelect">
                    #for $curStatus in [$SKIPPED, $WANTED, $ARCHIVED, $IGNORED]:
                        <option value="$curStatus" #if $sickbeard.STATUS_DEFAULT == $curStatus then 'selected="selected"' else ''#>$statusStrings[$curStatus]</option>
                    #end for
                    </select>
                </span>
                <span class="component-desc">Set the initial status of missing episodes</span>
            </label>
        </div>

        Audio language:
        <p>
            Activate this Checkbox if you're satisfied with this Language. If you leave it empty it download that language but keep looking for the one you're satisfied with
        </p>
        <input type="hidden" name="audioLangs" value="" />
        <ul class="audio-lang-select">
            <li class="audio-language">
                <select>
                #for $k,$v in $audioLanguages.iteritems():
                    <option value="$k">$v</option>
                #end for
                </select>
                <input type="checkbox" value="1"/> 
            </li>
            <li>
                <a href="#" class="add-language">Add Language</a>
            </li>
        </ul>

        <script type="text/javascript" charset="utf-8">
        <!--
        \$(document).ready(function(){

            var template = \$(".audio-lang-select li.audio-language").first().clone();
            \$(".audio-lang-select li.audio-language").remove();
            
            \$(\$("input[name='audioLangs']").val().split("|")).each(function(){
                var parts = this.split(":");

                language = template.clone();
                language.find("select").val(parts[0]);
                if(parseInt(parts[1]) == 1)
                    language.find("input:checkbox").attr('checked', true);
                else
                    language.find("input:checkbox").attr('checked', false);

                \$(".audio-lang-select li").last().before(language);
            });

            function updateAudioSelectContext(){
                var languages = \$(".audio-lang-select li.audio-language");
                if (languages.length > 1) {
                    languages.find("input").css("visibility", "visible");
                } else {
                    languages.find("input").css("visibility", "hidden").attr("value", "1");
                }
            }
            updateAudioSelectContext();


            function updateAudioLanguages(){
                var languages = \$(".audio-lang-select li.audio-language");
                audioLangs = [];
                languages.each(function(i){
                    var language = \$(this);
                    var satisfied = language.find("input:checkbox:checked").length;
                    audioLangs.push(language.find("select").val() + ":" + satisfied);
                });
                \$("input[name='audioLangs']").val(audioLangs.join("|"));
            }
            updateAudioLanguages();

            var counter = 0;
            \$(".add-language").click(function(){
                counter++;
                var template = \$(".audio-lang-select li.audio-language").first().clone();
                template.html(template.html().replace(/\[0\]/g, "[" + counter + "]"));
                \$(".audio-lang-select li.audio-language").last().after(template);
                updateAudioSelectContext();
                updateAudioLanguages();
                return false;
            });

            \$(".audio-lang-select").find("input, select").live("change", function(){
                updateAudioLanguages();
            })

        });
        //-->
        </script>

        <div class="field-pair alt">
            <input class="cb" type="checkbox" name="flatten_folders" id="flatten_folders" #if $sickbeard.FLATTEN_FOLDERS_DEFAULT then "checked=\"checked\"" else ""# />
            <label for="flatten_folders" class="clearfix">
                <span class="component-title">Flatten Folders</span>
                <span class="component-desc">Disregard sub-folders?</span>
            </label>
        </div>

        #set $qualities = $Quality.splitQuality($sickbeard.QUALITY_DEFAULT)
        #set global $anyQualities = $qualities[0]
        #set global $bestQualities = $qualities[1]
        #include $os.path.join($sickbeard.PROG_DIR, "data/interfaces/default/inc_qualityChooser.tmpl")

        <div class="field-pair alt">
            <label for="saveDefaultsButton" class="nocheck clearfix">
                <span class="component-title"><input class="btn" type="button" id="saveDefaultsButton" value="Save Defaults" disabled="disabled" /></span>
                <span class="component-desc">Persist current values as the defaults</span>
            </label>
        </div>
